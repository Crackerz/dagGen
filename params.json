{"name":"dagGen","tagline":"A simple library for generating random directed acyclic graphs in the form of adjacency matrices","body":"Below are some code snippets showing how to use the library\r\n\r\n    /*\r\n     * Generate a random matrix and print it\r\n     */\r\n    DAGSmith smith = new DAGSmith();\r\n    boolean[][] dag = smith.generateRandomDAG(10, 2);\r\n    System.out.println(DAGTools.printDAG(dag));\r\n    System.out.println(\"Generated a \" + dag.length + \"x\" + dag[0].length +\r\n            \" DAG with \" + DAGTools.getEdges(dag) + \" edges.\");\r\n    \r\n    /*\r\n     * Save file to disk\r\n     */\r\n    DAGTools.saveToFile(dag, \"1.dag\");\r\n    \r\n    /*\r\n     * Read file from disk\r\n     */\r\n    DAGParse parse = new DAGParse();\r\n    try {\r\n        dag = parse.parseDependancies(\"1.dag\");\r\n        System.out.println(DAGTools.printDAG(dag));\r\n        System.out.println(\"Read a \" + dag.length + \"x\" + dag[0].length +\r\n                \" DAG with \" + DAGTools.getEdges(dag) + \" edges.\");\r\n    } catch (Exception e) {\r\n        System.out.println(\"Failed getting file!\");\r\n        e.printStackTrace();\r\n    }\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}